import { textBuilder as tb } from './textBuilder';
import { amount, bold, cursive } from './utils';

export const presets = {
    defaultDocument: (documentName: string) => tb()
        .text('–î–æ–∫—É–º–µ–Ω—Ç')
        .space()
        .text(documentName, bold)
        .space()
        .text('—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é')
        .done(),

    tryingAddInfo: () => tb()
        .icon('üë®‚Äçüíª')
        .space()
        .text('–ü—ã—Ç–∞—é—Å—å –¥–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')
        .done(),

    amountEnteredWrong: () => tb()
        .text('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ', cursive)
        .space()
        .text('–∑–Ω–∞—á–µ–Ω–∏–µ')
        .nextLine()
        .text('–ü—Ä–∏–º–µ—Ä:', bold)
        .space()
        .text('120 –ü–æ–º–∏–¥–æ—Ä—ã –∏ –æ–≥—É—Ä—Ü—ã')
        .done(),

    selectCategory: () => tb()
        .text('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é')
        .done(),

    timeExpired: () => tb()
        .icon('ü§∑‚Äç‚ôÇÔ∏è')
        .space()
        .text('–Ø –Ω–µ –¥–æ–∂–¥–∞–ª—Å—è, –Ω–∞—á–Ω–∏ —Å–Ω–∞—á–∞–ª–∞')
        .done(),

    noSpendingForCurrentPeriod: () => tb()
        .text('–ù–µ—Ç —Ç—Ä–∞—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥')
        .done(),

    pleaseWait: () => tb()
        .icon('üë®‚Äçüíª')
        .space()
        .text(' –°—á–∏—Ç–∞—é, –ø–æ–¥–æ–∂–¥–∏')
        .done(),

    todaySummary: () => tb()
        .text('–æ—Ç—á–µ—Ç –∑–∞')
        .space()
        .text('—Å–µ–≥–æ–¥–Ω—è', bold)
        .done(),

    weekSummaryText: () => tb()
        .text('–æ—Ç—á–µ—Ç –∑–∞')
        .space()
        .text('–Ω–µ–¥–µ–ª—é', bold)
        .done(),

    halfDayNotification: (userName: string, currency: string, value?: { amount: number }) => {
        if (value) {
            return tb()
                .text('–û—Ç–ª–∏—á–Ω–æ, —Ç—ã –Ω–µ –∑–∞–±—ã–≤–∞–µ—à—å –≤–Ω–æ—Å–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã:')
                .nextLine()
                .icon('üí∞')
                .space()
                .text('—Ç–æ–±–æ–π —É–∂–µ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ')
                .space()
                .amount(value.amount, currency, bold)
                .done();
        }

        return tb()
            .icon('‚è∞')
            .space()
            .text('–ù–µ –∑–∞–±—ã–≤–∞–π –∑–∞–ø–æ–ª–Ω—è—Ç—å —Ä–∞—Å—Ö–æ–¥—ã, –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö')
            .done();
    },

    formatSummaryBlock: (name: string, title: string, documentSummary: string) => tb()
        .icon('üìö')
        .space()
        .format('%s: %s\n\n%s', name, title, documentSummary)
        .done(),

    cacheIsEmpty: () => tb().text('–ù–µ –Ω–∞—à–µ–ª—Å—è –æ–±—å–µ–∫—Ç –≤ –∫–µ—à–µ').done(), // TODO

    amountEnteredWrongFormat: () => tb()
        .text('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ', cursive)
        .space()
        .text('–∑–Ω–∞—á–µ–Ω–∏–µ')
        .nextLine()
        .text('–ü—Ä–∏–º–µ—Ä:', bold)
        .space()
        .text('120 –ü–æ–º–∏–¥–æ—Ä—ã –∏ –æ–≥—É—Ä—Ü—ã')
        .done(),

    simplifiedSummary: (userName: string, currency: string, value: { amount: number, maxAmount: { value: number, category: string, note: string } }) => tb()
        .text(userName, bold)
        .nextLine()
        .icon('üí∞')
        .space()
        .text('–í—Å–µ–≥–æ')
        .amount(value.amount, currency, bold)

        .nextLine()

        .icon('üî•')
        .space()
        .format('–°–∞–º–∞—è –¥–æ—Ä–æ–≥–∞—è –ø–æ–∫—É–ø–∫–∞ %s –≤ %s', bold(amount(value.maxAmount.value, currency)), value.maxAmount.category)
        .format('\\(%s\\)', cursive(value.maxAmount.note))
        .nextLine()
        .nextLine()
        .done(),

    estimatedCategoryText: (category: string) => tb()
        .text('–í–æ–∑–º–æ–∂–Ω–æ')
        .space()
        .text(category, bold)
        .text('?')
        .done(),

    totalSummaryFooter: (totalAmount: number, currency: string) => {
        tb()
            .text('–í—Å–µ–≥–æ:', bold)
            .space()
            .amount(totalAmount, currency)
            .done();
    },
};
